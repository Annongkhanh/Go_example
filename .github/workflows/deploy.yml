name: Deploy

on:
  push:
    branches: [ "release" ]

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read  # This is required for actions/checkout
env:
  AWS_REGION: "ap-southeast-1"

jobs:

  build:
    name: Deploy image
    runs-on: ubuntu-latest

    
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
            version: 'v1.26.2' 
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1 # More information on this action can be found below in the 'AWS Credentials' section
        with:
          role-to-assume: arn:aws:iam::072474300660:role/github-action-oidc-role
          role-session-name: github-action
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Load secrets, save to app.env
        run: aws secretsmanager get-secret-value --secret-id simple_bank --query SecretString --output text | jq 'to_entries|map("\(.key)=\(.value)")|.[]' -r > app.env


      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: simplebank
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG -t $REGISTRY/$REPOSITORY:latest .
          docker push -a $REGISTRY/$REPOSITORY

      - name: Update kubeconfig
        run: aws eks update-kubeconfig --name simple-bank --region ap-southeast-1 

          
      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f eks/aws-auth.yaml
          kubectl apply -f eks/deployment.yaml
          kubectl apply -f eks/service.yaml
          kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.6.4/deploy/static/provider/aws/deploy.yaml
          kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.yaml
          kubectl apply -f eks/ingress.yaml
          kubectl apply -f eks/issuer.yaml
